jobs:
  finish:
    if: ${{ always() }}
    needs: linux_server_tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Close parallel build
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
  linux_server_tests:
    runs-on: self-hosted
    services:
      mysql:
        env:
          MYSQL_ROOT_PASSWORD: root
        image: mysql:8
        options: --health-cmd "mysqladmin ping" --health-interval 5s --health-timeout
          2s --health-retries 3
        ports:
        - 3306
      postgres:
        env:
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        image: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
        - 5432
    steps:
    - continue-on-error: true
      name: Set up secrets
      run: 'echo "COVERALLS_TOKEN=$(echo eUVUVGRHOFJhQm9GMFJBYTNibjVhcWFEblpac1lmMlE3Cg==
        | base64 -d)" >> $GITHUB_ENV

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      id: java_linting
      name: Check Java linting
      run: 'mvn -B compile formatter:validate impsort:check javadoc:javadoc -Ddoclint=all

        '
    - continue-on-error: true
      id: configure_db_connections
      name: Configure connections to databases
      run: cat extensions/database/tests/conf/github_actions_tests.xml | sed -e "s/MYSQL_PORT/${{
        job.services.mysql.ports[3306] }}/g" | sed -e "s/POSTGRES_PORT/${{ job.services.postgres.ports[5432]
        }}/g" > extensions/database/tests/conf/tests.xml
    - continue-on-error: true
      env:
        PGPASSWORD: postgres
      id: populate_databases_with_test_data
      name: Populate databases with test data
      run: 'mysql -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} -proot
        -e ''CREATE DATABASE test_db;''

        mysql -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} -proot
        < extensions/database/tests/conf/test-mysql.sql

        psql -U postgres test_db -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432]
        }} < extensions/database/tests/conf/test-pgsql.sql

        '
    - continue-on-error: true
      name: Build and test with Maven
      run: mvn -B jacoco:prepare-agent test jacoco:report
    - continue-on-error: true
      name: Coveralls main
      uses: coverallsapp/github-action@v2
      with:
        base-path: main/src
        fail-on-error: false
        files: main/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-main
        format: jacoco
        parallel: true
    - continue-on-error: true
      name: Coveralls database
      uses: coverallsapp/github-action@v2
      with:
        base-path: extensions/database/src
        fail-on-error: false
        files: extensions/database/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-database
        format: jacoco
        github-token: ${{ env.COVERALLS_TOKEN }}
        parallel: true
    - continue-on-error: true
      name: Coveralls phonetic
      uses: coverallsapp/github-action@v2
      with:
        base-path: extensions/phonetic/src
        fail-on-error: false
        files: extensions/phonetic/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-phonetic
        format: jacoco
        github-token: ${{ env.COVERALLS_TOKEN }}
        parallel: true
    - continue-on-error: true
      name: Coveralls gdata
      uses: coverallsapp/github-action@v2
      with:
        base-path: extensions/gdata/src
        fail-on-error: false
        files: extensions/gdata/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-gdata
        format: jacoco
        github-token: ${{ env.COVERALLS_TOKEN }}
        parallel: true
    - continue-on-error: true
      name: Coveralls wikibase
      uses: coverallsapp/github-action@v2
      with:
        base-path: extensions/wikibase/src
        fail-on-error: false
        files: extensions/wikibase/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-wikibase
        format: jacoco
        github-token: ${{ env.COVERALLS_TOKEN }}
        parallel: true
    - continue-on-error: true
      name: Coveralls jython
      uses: coverallsapp/github-action@v2
      with:
        base-path: extensions/jython/src
        fail-on-error: false
        files: extensions/jython/target/site/jacoco/jacoco.xml
        flag-name: Java-${{ matrix.java }}-jython
        format: jacoco
        github-token: ${{ env.COVERALLS_TOKEN }}
        parallel: true
    strategy:
      matrix:
        java:
        - 21
  windows_server_tests:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      id: java_linting
      name: Check Java linting
      run: 'mvn -B formatter:validate impsort:check

        '
    - continue-on-error: true
      name: Build and test with Maven
      run: mvn -B jacoco:prepare-agent test
name: CI
on:
  repository_dispatch:
    types: trigger-ga___pull_request_server.yml
permissions: read-all
